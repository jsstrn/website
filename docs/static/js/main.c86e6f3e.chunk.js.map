{"version":3,"sources":["components/Header.js","components/Social.js","components/Section.js","components/About.js","components/Project.js","components/ProjectList.js","components/Footer/styledComponents.js","components/Footer/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["Container","styled","header","Image","img","Heading","h1","Header","alt","src","Section","section","Icon","Social","social","map","s","key","id","href","link","name","icon","heading","iconLabel","children","className","role","aria-label","Block","div","About","Project","title","description","technologies","links","renderIcon","source","live","ProjectList","projects","p","containerStyle","css","footer","Text","Attribution","Quote","Footer","year","Date","getFullYear","useState","image","setImageSource","quote","setQuote","onClick","setTimeout","index","getDay","quotes","author","element","document","scrollingElement","body","scrollTop","scrollHeight","scrollToBottomOfPage","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c86e6f3e.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.header`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Image = styled.img`\n  width: 10rem;\n  border-radius: 50%;\n  transition: filter 0.5s;\n  box-shadow: 8px 8px 16px #b7b7b7, -8px -8px 16px #ffffff;\n  &:hover {\n    filter: grayscale(1);\n  }\n`;\n\nconst Heading = styled.h1`\n  margin-bottom: 0;\n`;\n\nfunction Header() {\n  return (\n    <Container>\n      <Image alt=\"Jesstern Rays\" src=\"/images/profile-yellow.jpg\" />\n      <Heading>Jesstern Rays</Heading>\n      <p>Software Engineer</p>\n    </Container>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { social } from \"../data\";\nimport styled from \"styled-components\";\n\nconst Section = styled.section`\n  margin: 1rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst Icon = styled.img`\n  padding: 0.5rem;\n  margin: 1rem;\n  width: 22px;\n  height: 22px;\n  border-radius: 50%;\n  background-color: whitesmoke;\n  transition: box-shadow 0.5s;\n  box-shadow: 4px 4px 8px #b7b7b7, -4px -4px 8px #ffffff;\n\n  &:hover,\n  &:active {\n    cursor: pointer;\n    box-shadow: inset 4px 4px 8px #b7b7b7, inset -4px -4px 8px #ffffff;\n  }\n`;\n\nfunction Social() {\n  return (\n    <Section>\n      {social.map(s => (\n        <a key={s.id} href={s.link}>\n          <Icon alt={s.name} src={`images/${s.icon}`} />\n        </a>\n      ))}\n    </Section>\n  );\n}\n\nexport default Social;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Section({ heading, icon, iconLabel, children }) {\n  return (\n    <section className=\"flex-col-center\">\n      <h2>\n        {heading}{\" \"}\n        <span role=\"img\" aria-label={iconLabel}>\n          {icon}\n        </span>\n      </h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  heading: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n  iconLabel: PropTypes.string.isRequired,\n  children: PropTypes.node\n};\n\nexport default Section;\n","import React from \"react\";\nimport Section from \"./Section\";\nimport styled from \"styled-components\";\n\nconst Block = styled.div`\n  width: 60vw;\n  padding: 0.5rem 1.5rem;\n  margin-bottom: 2rem;\n  border-radius: 5px;\n  background-color: #fbfbfb;\n  box-shadow: 4px 4px 8px #b7b7b7, -4px -4px 8px #ffffff;\n`;\n\nfunction About() {\n  return (\n    <Section heading=\"About\" icon=\"👋\" iconLabel=\"Waving Hand\">\n      <Block>\n        <p>\n          I believe in delivering quality software through test driven\n          development and clean code. I've developed both front and backend\n          applications for over a decade and worked with clients from small\n          startups to large enterprises.\n        </p>\n        <p>\n          I am a co-organizer of{\" \"}\n          <a href=\"https://www.meetup.com/Junior-Developers-Singapore\">\n            Junior Developers Singapore\n          </a>{\" \"}\n          and remain deeply involved in the tech community in Singapore. I also\n          enjoy contributing to open source projects.\n        </p>\n        <p>\n          When not programming, I like board games, yoga by the beach, and\n          emojis.\n        </p>\n      </Block>\n    </Section>\n  );\n}\n\nexport default About;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Block = styled.div`\n  width: 60vw;\n  padding: 0.5rem 1.5rem;\n  margin-bottom: 2rem;\n  border-radius: 5px;\n  background-color: #fbfbfb;\n  box-shadow: 4px 4px 8px #b7b7b7, -4px -4px 8px #ffffff;\n`;\n\nconst Icon = styled.img`\n  margin: 0 0.3rem;\n  width: 16px;\n  padding: 8px;\n  border-radius: 10%;\n  box-shadow: 4px 4px 8px #b7b7b7, -4px -4px 8px #ffffff;\n  &:hover,\n  &:active {\n    box-shadow: inset 4px 4px 8px #b7b7b7, inset -4px -4px 8px #ffffff;\n  }\n`;\n\nfunction Project({ title, description, technologies, links }) {\n  const renderIcon = (link, icon) => {\n    return (\n      link && (\n        <a href={link}>\n          <Icon alt=\"project icon\" src={icon} />\n        </a>\n      )\n    );\n  };\n\n  return (\n    <Block className=\"project\">\n      <header>\n        <h3>{title}</h3>\n        <div>\n          {renderIcon(links.source, \"images/fork.png\")}\n          {renderIcon(links.live, \"images/web.png\")}\n        </div>\n      </header>\n      <p>{description}</p>\n      <p className=\"technologies\">\n        <span>technologies: </span>\n        {technologies}\n      </p>\n    </Block>\n  );\n}\n\nProject.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  technologies: PropTypes.string.isRequired,\n  links: PropTypes.object.isRequired\n};\n\nexport default Project;\n","import React from \"react\";\nimport Project from \"./Project\";\nimport { projects } from \"../data\";\nimport Section from \"./Section\";\n\nfunction ProjectList() {\n  return (\n    <Section heading=\"Projects\" icon=\"🏗\" iconLabel=\"Building Construction\">\n      {projects &&\n        projects.map(p => {\n          return (\n            <Project\n              key={p.id}\n              title={p.title}\n              description={p.description}\n              technologies={p.technologies}\n              links={p.links}\n            />\n          );\n        })}\n    </Section>\n  );\n}\n\nexport default ProjectList;\n","import styled, { css } from \"styled-components\";\n\nconst containerStyle = css`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Container = styled.footer`\n  ${containerStyle}\n  margin: 2rem auto 1rem;\n`;\n\nexport const Text = styled.p`\n  margin: 0.1rem;\n  text-align: center;\n  font-size: 0.7rem;\n  color: grey;\n`;\n\nexport const Attribution = styled(Text)`\n  font-size: 0.5rem;\n`;\n\nexport const Quote = styled(Text)`\n  padding: 1rem;\n`;\n\nexport const Image = styled.img`\n  padding: 0.2rem 1.5rem;\n  width: 1.5rem;\n`;\n","import React, { useState } from \"react\";\nimport { Text, Quote, Attribution, Image, Container } from \"./styledComponents\";\nimport { quotes } from \"../../data\";\n\nconst staticImageSource = \"/images/dancer.png\";\nconst dynamicImageSource = \"/images/dancer.gif\";\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n  const [image, setImageSource] = useState(staticImageSource);\n  const [quote, setQuote] = useState(\"\");\n\n  const scrollToBottomOfPage = () => {\n    const element = document.scrollingElement || document.body;\n    element.scrollTop = element.scrollHeight;\n  };\n\n  const activateEasterEgg = () => {\n    setTimeout(() => {\n      const index = new Date().getDay();\n      const quote = quotes[index];\n\n      setQuote(`\"${quote.quote}\" ― ${quote.author}`);\n      setImageSource(dynamicImageSource);\n      scrollToBottomOfPage();\n    }, 0);\n  };\n\n  return (\n    <Container>\n      {!!quote && <Quote>{quote}</Quote>}\n      <Image alt=\"dancer\" src={image} onClick={activateEasterEgg} />\n      <Text>Handcrafted by Jesstern Rays</Text>\n      <Text>Copyright © {year} Jesstern Rays · All rights reserved ·</Text>\n      <Attribution>\n        Icons by <a href=\"https://icons8.com\">Icons8</a> · Emoji by{\" \"}\n        <a href=\"https://www.joypixels.com/\">JoyPixels</a>\n      </Attribution>\n    </Container>\n  );\n}\n\nexport default Footer;\n","import React, { Fragment } from \"react\";\nimport Header from \"./Header\";\nimport Social from \"./Social\";\nimport About from \"./About\";\nimport ProjectList from \"./ProjectList\";\nimport Footer from \"./Footer/Footer\";\n\nfunction App() {\n  return (\n    <Fragment>\n      <Header />\n      <Social />\n      <About />\n      <ProjectList />\n      <Social />\n      <Footer />\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}